<form id="form-1" method='post'  action='' data-id="search">
<%= tag(:input, :type => "hidden", :name => request_forgery_protection_token.to_s, :value => form_authenticity_token) %> 

<input  type="hidden"  name='item_id' />
Item Name :<input name='ItemName' id='item_name'/>

Quantity :<input name=quantity id='quantity'/>
<input type='submit' id='new_submit'/>
</form>
<p id="search_result"></p>
<p id="cart_list">  

</p>
<p id="checkout"></p>
<button type='submit' id='checkout_submit'> checkout </button>



<script type="text/javascript">

function Globals () {
	var self = this; 
		self.cart = JSON.parse(window.localStorage.getItem("cart"));
		if(!self.cart)
			self.cart=[];
	var val;
	var count;
	self.checkout_total =JSON.parse(window.localStorage.getItem("checkout_total"));
	if(!self.checkout_total)
	{
		self.checkout_total=[0];
		count=0;
	}else
	count=self.checkout_total.length;

	

	self.print_cart_list = function () {
		var cart = JSON.parse(window.localStorage.getItem("cart"));
		if (cart){
		$("#cart_list").html("");
		for(i = 0; i < cart.length;i++) {

			$("#cart_list").append("<br />" 
								+ cart[i].name 
								+ "&nbsp;" 
								+ cart[i].quantity 
								+ "&nbsp;" 
								+ cart[i].total
								+"&nbsp;"
								+"<a href='' class='item_delete' id='"+i+"' data-id="+cart[i].item_id+ ">delete</a></td>");
		}
		$('#checkout').html("");
	
		var total_list=JSON.parse(window.localStorage.getItem("checkout_total"));

		$('#checkout').append("<br /><p>checkout_total :"+total_list[self.cart.length-1]+"</p>");
	}
		
	}

	self.ajax_request = function (id) {
		console.log("in function ajax_request");
		var name = $('#search_result_' + id).attr("data-name");
	  	$("#item_name").val(name);
	 	$("[name='item_id']").val(id);	  	 	
	}

	self.debug = true;
	
	self.search = function () {
		$("[name= 'ItemName']").keyup(function(){
		console.log("Keyup");
		$.ajax({
			url: 'search',
			type: 'POST',
			data: $(this).parent().serialize() 	,
			dataType: 'text',
			success: function(data)
			{
				$('#search_result').html(data);
		   	}
			
		})
		.fail(function(data){
			console.log(data);
			});
		});
	}

 	self.delete_cart_item = function(){
 		$('.item_delete').click(function(e){
 			e.preventDefault();
 			var id=$(this).attr('id');
 			console.log("cart item delete");
			
			var i;
			// var cart = JSON.parse(window.localStorage.getItem("cart"));
			var cart_data=[];
			var count1=0;
			var checkout_total1=[0];			

		 	for(i = 0; i < self.cart.length;i++) {


		 		if(self.cart[i].item_id ==$('#'+id).attr('data-id'))
 				{
 					console.log('deleted');
 					continue;
 				}
 				cart_data.push(self.cart[i]);
 				if(count1==0){
				 	checkout_total1[count1]+=self.cart[i].total;
				}else{
						checkout_total1[count1]=checkout_total1[count1-1]+self.cart[i].total;
				}
 				count1++;
			}
			console.log(cart_data);
			console.log(checkout_total1);
			window.localStorage.setItem('cart', JSON.stringify(cart_data));
			window.localStorage.setItem('checkout_total',JSON.stringify(checkout_total1)); 
		 	location.reload();
		 	//
 	});

 }

	self.form_submission = function () {
		$('form').submit(function(e){
			e.preventDefault();
		    var stock = parseInt($("[name='quantity']").val());
		    var name = $("[name='ItemName']").val();
		    var item_id = $("[name='item_id']").val();
			var stock_present = $('#search_result_'+ item_id).attr("data-stock");
		   	var price = parseInt($('#search_result_'+ item_id).attr("data-price"));
		   	if(parseInt(stock_present) < stock ){
			  	alert("quantity not available");
		   	}
			else{
				var total= price * stock;     	
				item = {
				  			quantity: stock,
				  			item_id:  item_id ,
				  			total: total,
				  			name: name, 
				  		}
				self.cart.push(item);
				console.log(self.cart);
				window.localStorage.setItem('cart', JSON.stringify(self.cart));
				
				if(count==0){
					self.checkout_total[count]+=item['total'];
				}
				else{
				self.checkout_total[count]=self.checkout_total[count-1]+item['total'];
				}
				window.localStorage.setItem('checkout_total', JSON.stringify(self.checkout_total));
				console.log('checkout_total:'+self.checkout_total[count]);
				self.print_cart_list();	
				count++;
			}
			location.reload();
		});

	}

	self.checkout_submission=function(){
		
		$('#checkout_submit').click(function(){
			console.log("checkout pressed");
		
		var total_list=JSON.parse(window.localStorage.getItem("checkout_total"));	
		var cart = JSON.parse(window.localStorage.getItem("cart"));
		var cart_data = [];
		var i;
		if (cart){
		for(i = 0; i < cart.length;i++) {
 				item = {
				  			quantity: cart[i].quantity,
				  			item_id:  cart[i].item_id ,
				  			total: cart[i].total,
				  			name: cart[i].name, 
				  		}
				cart_data.push(item);
			}
		}


		var post_data = {
			utf8: $("[name='utf8']").val(), 
			authenticity_token: $("[name='authenticity_token']").val(),
			cart:JSON.stringify(cart_data),
			total :total_list[cart.length-1]		
			}
			$.ajax({
						url: 'new',
						type: 'POST',
						data: post_data,
						dataType: 'text',
						success: function(data)
						{
							localStorage.clear();
							location.reload();
					   	}
						
					})
					.fail(function(data){
						console.log(data);
						});

		});

	}

	
	return self;	
}

var globals = new Globals();
globals.search();
globals.form_submission();
globals.print_cart_list();
globals.checkout_submission();
globals.delete_cart_item();
</script>